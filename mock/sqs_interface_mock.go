// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/Wattpad/sqsconsumer (interfaces: SQSAPI)

package mock

import (
	sqs "github.com/aws/aws-sdk-go/service/sqs"
	gomock "github.com/golang/mock/gomock"
)

// Mock of SQSAPI interface
type MockSQSAPI struct {
	ctrl     *gomock.Controller
	recorder *_MockSQSAPIRecorder
}

// Recorder for MockSQSAPI (not exported)
type _MockSQSAPIRecorder struct {
	mock *MockSQSAPI
}

func NewMockSQSAPI(ctrl *gomock.Controller) *MockSQSAPI {
	mock := &MockSQSAPI{ctrl: ctrl}
	mock.recorder = &_MockSQSAPIRecorder{mock}
	return mock
}

func (_m *MockSQSAPI) EXPECT() *_MockSQSAPIRecorder {
	return _m.recorder
}

func (_m *MockSQSAPI) ChangeMessageVisibilityBatch(_param0 *sqs.ChangeMessageVisibilityBatchInput) (*sqs.ChangeMessageVisibilityBatchOutput, error) {
	ret := _m.ctrl.Call(_m, "ChangeMessageVisibilityBatch", _param0)
	ret0, _ := ret[0].(*sqs.ChangeMessageVisibilityBatchOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSQSAPIRecorder) ChangeMessageVisibilityBatch(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ChangeMessageVisibilityBatch", arg0)
}

func (_m *MockSQSAPI) CreateQueue(_param0 *sqs.CreateQueueInput) (*sqs.CreateQueueOutput, error) {
	ret := _m.ctrl.Call(_m, "CreateQueue", _param0)
	ret0, _ := ret[0].(*sqs.CreateQueueOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSQSAPIRecorder) CreateQueue(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateQueue", arg0)
}

func (_m *MockSQSAPI) DeleteMessageBatch(_param0 *sqs.DeleteMessageBatchInput) (*sqs.DeleteMessageBatchOutput, error) {
	ret := _m.ctrl.Call(_m, "DeleteMessageBatch", _param0)
	ret0, _ := ret[0].(*sqs.DeleteMessageBatchOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSQSAPIRecorder) DeleteMessageBatch(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteMessageBatch", arg0)
}

func (_m *MockSQSAPI) GetQueueUrl(_param0 *sqs.GetQueueUrlInput) (*sqs.GetQueueUrlOutput, error) {
	ret := _m.ctrl.Call(_m, "GetQueueUrl", _param0)
	ret0, _ := ret[0].(*sqs.GetQueueUrlOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSQSAPIRecorder) GetQueueUrl(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetQueueUrl", arg0)
}

func (_m *MockSQSAPI) ReceiveMessage(_param0 *sqs.ReceiveMessageInput) (*sqs.ReceiveMessageOutput, error) {
	ret := _m.ctrl.Call(_m, "ReceiveMessage", _param0)
	ret0, _ := ret[0].(*sqs.ReceiveMessageOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSQSAPIRecorder) ReceiveMessage(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ReceiveMessage", arg0)
}
